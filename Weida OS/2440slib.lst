


ARM Macro Assembler    Page 1 


    1 00000000         ;=======================================================
                       ==============
    2 00000000         ; File Name : 2440slib.s
    3 00000000         ; Function  : S3C2440  (Assembly)
    4 00000000         ; Date      : March 09, 2002
    5 00000000         ; Revision : Programming start (February 26,2002) -> SOP
                       
    6 00000000         ; Revision : 03.11.2003 ver 0.0 Attatched for 2440
    7 00000000         ;=======================================================
                       ==============
    8 00000000         
    9 00000000                 PRESERVE8        {TRUE}
   10 00000000         
   11 00000000         ;Interrupt, FIQ/IRQ disable
   12 00000000 000000C0 
                       NOINT   EQU              0xc0        ; 1100 0000
   13 00000000         
   14 00000000         ;Check if tasm.exe(armasm -16 ...@ADS 1.0) is used.
   15 00000000                 GBLL             THUMBCODE
   16 00000000                 [                {CONFIG} = 16
   20 00000000 FALSE    
                       THUMBCODE
                               SETL             {FALSE}
   21 00000000                 ]
   22 00000000         
   23 00000000                 MACRO
   24 00000000                 MOV_PC_LR
   25 00000000                 [                THUMBCODE
   26 00000000                 bx               lr
   27 00000000                 |
   28 00000000                 mov              pc,lr
   29 00000000                 ]
   30 00000000                 MEND
   31 00000000         
   32 00000000                 AREA             |C$$code|, CODE, READONLY
   33 00000000                 EXPORT           EnterCritical
   34 00000000         EnterCritical
   35 00000000 E10F1000        mrs              r1, cpsr
   36 00000004 E5801000        str              r1, [r0]
   37 00000008 E38110C0        orr              r1, r1, #NOINT
   38 0000000C E12FF001        msr              cpsr_cxsf, r1
   39 00000010                 MOV_PC_LR
   25 00000010                 [                THUMBCODE
   28 00000010 E1A0F00E        mov              pc,lr
   29 00000014                 ]
   40 00000014         ;restore cpsr, r0 = address to restore cpsr 
   41 00000014                 EXPORT           ExitCritical
   42 00000014         ExitCritical
   43 00000014 E5901000        ldr              r1, [r0]
   44 00000018 E12FF001        msr              cpsr_cxsf, r1
   45 0000001C                 MOV_PC_LR
   25 0000001C                 [                THUMBCODE
   28 0000001C E1A0F00E        mov              pc,lr
   29 00000020                 ]
   46 00000020         ;==============
   47 00000020         ; CPSR I,F bit
   48 00000020         ;==============
   49 00000020         ;int SET_IF(void);
   50 00000020         ;The return value is current CPSR.



ARM Macro Assembler    Page 2 


   51 00000020                 EXPORT           SET_IF
   52 00000020         SET_IF
   53 00000020         ;This function works only if the processor is in previli
                       ged mode.
   54 00000020 E10F0000        mrs              r0,cpsr
   55 00000024 E1A01000        mov              r1,r0
   56 00000028 E38110C0        orr              r1,r1,#NOINT
   57 0000002C E12FF001        msr              cpsr_cxsf,r1
   58 00000030                 MOV_PC_LR
   25 00000030                 [                THUMBCODE
   28 00000030 E1A0F00E        mov              pc,lr
   29 00000034                 ]
   59 00000034         
   60 00000034         ;void WR_IF(int cpsrValue);
   61 00000034                 EXPORT           WR_IF
   62 00000034         WR_IF
   63 00000034         ;This function works only if the processor is in previli
                       ged mode.
   64 00000034 E12FF000        msr              cpsr_cxsf,r0
   65 00000038                 MOV_PC_LR
   25 00000038                 [                THUMBCODE
   28 00000038 E1A0F00E        mov              pc,lr
   29 0000003C                 ]
   66 0000003C         
   67 0000003C         
   68 0000003C         ;void CLR_IF(void);
   69 0000003C                 EXPORT           CLR_IF
   70 0000003C         CLR_IF
   71 0000003C         ;This function works only if the processor is in previli
                       ged mode.
   72 0000003C E10F0000        mrs              r0,cpsr
   73 00000040 E3C000C0        bic              r0,r0,#NOINT
   74 00000044 E12FF000        msr              cpsr_cxsf,r0
   75 00000048                 MOV_PC_LR
   25 00000048                 [                THUMBCODE
   28 00000048 E1A0F00E        mov              pc,lr
   29 0000004C                 ]
   76 0000004C         
   77 0000004C                 EXPORT           outportw
   78 0000004C E1C100B0 
                       outportw
                               strh             r0, [r1]
   79 00000050                 MOV_PC_LR
   25 00000050                 [                THUMBCODE
   28 00000050 E1A0F00E        mov              pc,lr
   29 00000054                 ]
   80 00000054         
   81 00000054                 EXPORT           inportw
   82 00000054 E1D000B0 
                       inportw ldrh             r0, [r0]
   83 00000058                 MOV_PC_LR
   25 00000058                 [                THUMBCODE
   28 00000058 E1A0F00E        mov              pc,lr
   29 0000005C                 ]
   84 0000005C         
   85 0000005C         
   86 0000005C         ;====================================
   87 0000005C         ; MMU Cache/TLB/etc on/off functions
   88 0000005C         ;====================================



ARM Macro Assembler    Page 3 


   89 0000005C 00001000 
                       R1_I    EQU              (1<<12)
   90 0000005C 00000004 
                       R1_C    EQU              (1<<2)
   91 0000005C 00000002 
                       R1_A    EQU              (1<<1)
   92 0000005C 00000001 
                       R1_M    EQU              (1)
   93 0000005C 80000000 
                       R1_iA   EQU              (1<<31)
   94 0000005C 40000000 
                       R1_nF   EQU              (1<<30)
   95 0000005C         
   96 0000005C         ;void MMU_EnableICache(void)
   97 0000005C                 EXPORT           MMU_EnableICache
   98 0000005C         MMU_EnableICache
   99 0000005C EE110F10        mrc              p15,0,r0,c1,c0,0
  100 00000060 E3800A01        orr              r0,r0,#R1_I
  101 00000064 EE010F10        mcr              p15,0,r0,c1,c0,0
  102 00000068                 MOV_PC_LR
   25 00000068                 [                THUMBCODE
   28 00000068 E1A0F00E        mov              pc,lr
   29 0000006C                 ]
  103 0000006C         
  104 0000006C         ;void MMU_DisableICache(void)
  105 0000006C                 EXPORT           MMU_DisableICache
  106 0000006C         MMU_DisableICache
  107 0000006C EE110F10        mrc              p15,0,r0,c1,c0,0
  108 00000070 E3C00A01        bic              r0,r0,#R1_I
  109 00000074 EE010F10        mcr              p15,0,r0,c1,c0,0
  110 00000078                 MOV_PC_LR
   25 00000078                 [                THUMBCODE
   28 00000078 E1A0F00E        mov              pc,lr
   29 0000007C                 ]
  111 0000007C         
  112 0000007C         ;void MMU_EnableDCache(void)
  113 0000007C                 EXPORT           MMU_EnableDCache
  114 0000007C         MMU_EnableDCache
  115 0000007C EE110F10        mrc              p15,0,r0,c1,c0,0
  116 00000080 E3800004        orr              r0,r0,#R1_C
  117 00000084 EE010F10        mcr              p15,0,r0,c1,c0,0
  118 00000088                 MOV_PC_LR
   25 00000088                 [                THUMBCODE
   28 00000088 E1A0F00E        mov              pc,lr
   29 0000008C                 ]
  119 0000008C         
  120 0000008C         ;void MMU_DisableDCache(void)
  121 0000008C                 EXPORT           MMU_DisableDCache
  122 0000008C         MMU_DisableDCache
  123 0000008C EE110F10        mrc              p15,0,r0,c1,c0,0
  124 00000090 E3C00004        bic              r0,r0,#R1_C
  125 00000094 EE010F10        mcr              p15,0,r0,c1,c0,0
  126 00000098                 MOV_PC_LR
   25 00000098                 [                THUMBCODE
   28 00000098 E1A0F00E        mov              pc,lr
   29 0000009C                 ]
  127 0000009C         
  128 0000009C         ;void MMU_EnableAlignFault(void)
  129 0000009C                 EXPORT           MMU_EnableAlignFault



ARM Macro Assembler    Page 4 


  130 0000009C         MMU_EnableAlignFault
  131 0000009C EE110F10        mrc              p15,0,r0,c1,c0,0
  132 000000A0 E3800002        orr              r0,r0,#R1_A
  133 000000A4 EE010F10        mcr              p15,0,r0,c1,c0,0
  134 000000A8                 MOV_PC_LR
   25 000000A8                 [                THUMBCODE
   28 000000A8 E1A0F00E        mov              pc,lr
   29 000000AC                 ]
  135 000000AC         
  136 000000AC         ;void MMU_DisableAlignFault(void)
  137 000000AC                 EXPORT           MMU_DisableAlignFault
  138 000000AC         MMU_DisableAlignFault
  139 000000AC EE110F10        mrc              p15,0,r0,c1,c0,0
  140 000000B0 E3C00002        bic              r0,r0,#R1_A
  141 000000B4 EE010F10        mcr              p15,0,r0,c1,c0,0
  142 000000B8                 MOV_PC_LR
   25 000000B8                 [                THUMBCODE
   28 000000B8 E1A0F00E        mov              pc,lr
   29 000000BC                 ]
  143 000000BC         
  144 000000BC         ;void MMU_EnableMMU(void)
  145 000000BC                 EXPORT           MMU_EnableMMU
  146 000000BC         MMU_EnableMMU
  147 000000BC EE110F10        mrc              p15,0,r0,c1,c0,0
  148 000000C0 E3800001        orr              r0,r0,#R1_M
  149 000000C4 EE010F10        mcr              p15,0,r0,c1,c0,0
  150 000000C8                 MOV_PC_LR
   25 000000C8                 [                THUMBCODE
   28 000000C8 E1A0F00E        mov              pc,lr
   29 000000CC                 ]
  151 000000CC         
  152 000000CC         ;void MMU_DisableMMU(void)
  153 000000CC                 EXPORT           MMU_DisableMMU
  154 000000CC         MMU_DisableMMU
  155 000000CC EE110F10        mrc              p15,0,r0,c1,c0,0
  156 000000D0 E3C00001        bic              r0,r0,#R1_M
  157 000000D4 EE010F10        mcr              p15,0,r0,c1,c0,0
  158 000000D8                 MOV_PC_LR
   25 000000D8                 [                THUMBCODE
   28 000000D8 E1A0F00E        mov              pc,lr
   29 000000DC                 ]
  159 000000DC         
  160 000000DC         ;void MMU_SetFastBusMode(void)
  161 000000DC         ; FCLK:HCLK= 1:1
  162 000000DC                 EXPORT           MMU_SetFastBusMode
  163 000000DC         MMU_SetFastBusMode
  164 000000DC EE110F10        mrc              p15,0,r0,c1,c0,0
  165 000000E0 E3C00103        bic              r0,r0,#R1_iA:OR:R1_nF
  166 000000E4 EE010F10        mcr              p15,0,r0,c1,c0,0
  167 000000E8                 MOV_PC_LR
   25 000000E8                 [                THUMBCODE
   28 000000E8 E1A0F00E        mov              pc,lr
   29 000000EC                 ]
  168 000000EC         
  169 000000EC         ;void MMU_SetAsyncBusMode(void)
  170 000000EC         ; FCLK:HCLK= 1:2
  171 000000EC                 EXPORT           MMU_SetAsyncBusMode
  172 000000EC         MMU_SetAsyncBusMode
  173 000000EC EE110F10        mrc              p15,0,r0,c1,c0,0



ARM Macro Assembler    Page 5 


  174 000000F0 E3800103        orr              r0,r0,#R1_nF:OR:R1_iA
  175 000000F4 EE010F10        mcr              p15,0,r0,c1,c0,0
  176 000000F8                 MOV_PC_LR
   25 000000F8                 [                THUMBCODE
   28 000000F8 E1A0F00E        mov              pc,lr
   29 000000FC                 ]
  177 000000FC         
  178 000000FC         ;=========================
  179 000000FC         ; Set TTBase
  180 000000FC         ;=========================
  181 000000FC         ;void MMU_SetTTBase(int base)
  182 000000FC                 EXPORT           MMU_SetTTBase
  183 000000FC         MMU_SetTTBase
  184 000000FC         ;ro=TTBase
  185 000000FC EE020F10        mcr              p15,0,r0,c2,c0,0
  186 00000100                 MOV_PC_LR
   25 00000100                 [                THUMBCODE
   28 00000100 E1A0F00E        mov              pc,lr
   29 00000104                 ]
  187 00000104         
  188 00000104         ;=========================
  189 00000104         ; Set Domain
  190 00000104         ;=========================
  191 00000104         ;void MMU_SetDomain(int domain)
  192 00000104                 EXPORT           MMU_SetDomain
  193 00000104         MMU_SetDomain
  194 00000104         ;ro=domain
  195 00000104 EE030F10        mcr              p15,0,r0,c3,c0,0
  196 00000108                 MOV_PC_LR
   25 00000108                 [                THUMBCODE
   28 00000108 E1A0F00E        mov              pc,lr
   29 0000010C                 ]
  197 0000010C         
  198 0000010C         ;=========================
  199 0000010C         ; ICache/DCache functions
  200 0000010C         ;=========================
  201 0000010C         ;void MMU_InvalidateIDCache(void)
  202 0000010C                 EXPORT           MMU_InvalidateIDCache
  203 0000010C         MMU_InvalidateIDCache
  204 0000010C EE070F17        mcr              p15,0,r0,c7,c7,0
  205 00000110                 MOV_PC_LR
   25 00000110                 [                THUMBCODE
   28 00000110 E1A0F00E        mov              pc,lr
   29 00000114                 ]
  206 00000114         
  207 00000114         ;void MMU_InvalidateICache(void)
  208 00000114                 EXPORT           MMU_InvalidateICache
  209 00000114         MMU_InvalidateICache
  210 00000114 EE070F15        mcr              p15,0,r0,c7,c5,0
  211 00000118                 MOV_PC_LR
   25 00000118                 [                THUMBCODE
   28 00000118 E1A0F00E        mov              pc,lr
   29 0000011C                 ]
  212 0000011C         
  213 0000011C         ;void MMU_InvalidateICacheMVA(U32 mva)
  214 0000011C                 EXPORT           MMU_InvalidateICacheMVA
  215 0000011C         MMU_InvalidateICacheMVA
  216 0000011C         ;r0=mva
  217 0000011C EE070F35        mcr              p15,0,r0,c7,c5,1



ARM Macro Assembler    Page 6 


  218 00000120                 MOV_PC_LR
   25 00000120                 [                THUMBCODE
   28 00000120 E1A0F00E        mov              pc,lr
   29 00000124                 ]
  219 00000124         
  220 00000124         ;void MMU_PrefetchICacheMVA(U32 mva)
  221 00000124                 EXPORT           MMU_PrefetchICacheMVA
  222 00000124         MMU_PrefetchICacheMVA
  223 00000124         ;r0=mva
  224 00000124 EE070F3D        mcr              p15,0,r0,c7,c13,1
  225 00000128                 MOV_PC_LR
   25 00000128                 [                THUMBCODE
   28 00000128 E1A0F00E        mov              pc,lr
   29 0000012C                 ]
  226 0000012C         
  227 0000012C         ;void MMU_InvalidateDCache(void)
  228 0000012C                 EXPORT           MMU_InvalidateDCache
  229 0000012C         MMU_InvalidateDCache
  230 0000012C EE070F16        mcr              p15,0,r0,c7,c6,0
  231 00000130                 MOV_PC_LR
   25 00000130                 [                THUMBCODE
   28 00000130 E1A0F00E        mov              pc,lr
   29 00000134                 ]
  232 00000134         
  233 00000134         ;void MMU_InvalidateDCacheMVA(U32 mva)
  234 00000134                 EXPORT           MMU_InvalidateDCacheMVA
  235 00000134         MMU_InvalidateDCacheMVA
  236 00000134         ;r0=mva
  237 00000134 EE070F36        mcr              p15,0,r0,c7,c6,1
  238 00000138                 MOV_PC_LR
   25 00000138                 [                THUMBCODE
   28 00000138 E1A0F00E        mov              pc,lr
   29 0000013C                 ]
  239 0000013C         
  240 0000013C         ;void MMU_CleanDCacheMVA(U32 mva)
  241 0000013C                 EXPORT           MMU_CleanDCacheMVA
  242 0000013C         MMU_CleanDCacheMVA
  243 0000013C         ;r0=mva
  244 0000013C EE070F3A        mcr              p15,0,r0,c7,c10,1
  245 00000140                 MOV_PC_LR
   25 00000140                 [                THUMBCODE
   28 00000140 E1A0F00E        mov              pc,lr
   29 00000144                 ]
  246 00000144         
  247 00000144         ;void MMU_CleanInvalidateDCacheMVA(U32 mva)
  248 00000144                 EXPORT           MMU_CleanInvalidateDCacheMVA
  249 00000144         MMU_CleanInvalidateDCacheMVA
  250 00000144         ;r0=mva
  251 00000144 EE070F3E        mcr              p15,0,r0,c7,c14,1
  252 00000148                 MOV_PC_LR
   25 00000148                 [                THUMBCODE
   28 00000148 E1A0F00E        mov              pc,lr
   29 0000014C                 ]
  253 0000014C         
  254 0000014C         ;void MMU_CleanDCacheIndex(U32 index)
  255 0000014C                 EXPORT           MMU_CleanDCacheIndex
  256 0000014C         MMU_CleanDCacheIndex
  257 0000014C         ;r0=index
  258 0000014C EE070F5A        mcr              p15,0,r0,c7,c10,2



ARM Macro Assembler    Page 7 


  259 00000150                 MOV_PC_LR
   25 00000150                 [                THUMBCODE
   28 00000150 E1A0F00E        mov              pc,lr
   29 00000154                 ]
  260 00000154         
  261 00000154         ;void MMU_CleanInvalidateDCacheIndex(U32 index)
  262 00000154                 EXPORT           MMU_CleanInvalidateDCacheIndex
  263 00000154         MMU_CleanInvalidateDCacheIndex
  264 00000154         ;r0=index
  265 00000154 EE070F5E        mcr              p15,0,r0,c7,c14,2
  266 00000158                 MOV_PC_LR
   25 00000158                 [                THUMBCODE
   28 00000158 E1A0F00E        mov              pc,lr
   29 0000015C                 ]
  267 0000015C         
  268 0000015C         ;void MMU_WaitForInterrupt(void)
  269 0000015C                 EXPORT           MMU_WaitForInterrupt
  270 0000015C         MMU_WaitForInterrupt
  271 0000015C EE070F90        mcr              p15,0,r0,c7,c0,4
  272 00000160                 MOV_PC_LR
   25 00000160                 [                THUMBCODE
   28 00000160 E1A0F00E        mov              pc,lr
   29 00000164                 ]
  273 00000164         
  274 00000164         ;===============
  275 00000164         ; TLB functions
  276 00000164         ;===============
  277 00000164         ;voic MMU_InvalidateTLB(void)
  278 00000164                 EXPORT           MMU_InvalidateTLB
  279 00000164         MMU_InvalidateTLB
  280 00000164 EE080F17        mcr              p15,0,r0,c8,c7,0
  281 00000168                 MOV_PC_LR
   25 00000168                 [                THUMBCODE
   28 00000168 E1A0F00E        mov              pc,lr
   29 0000016C                 ]
  282 0000016C         
  283 0000016C         ;void MMU_InvalidateITLB(void)
  284 0000016C                 EXPORT           MMU_InvalidateITLB
  285 0000016C         MMU_InvalidateITLB
  286 0000016C EE080F15        mcr              p15,0,r0,c8,c5,0
  287 00000170                 MOV_PC_LR
   25 00000170                 [                THUMBCODE
   28 00000170 E1A0F00E        mov              pc,lr
   29 00000174                 ]
  288 00000174         
  289 00000174         ;void MMU_InvalidateITLBMVA(U32 mva)
  290 00000174                 EXPORT           MMU_InvalidateITLBMVA
  291 00000174         MMU_InvalidateITLBMVA
  292 00000174         ;ro=mva
  293 00000174 EE080F35        mcr              p15,0,r0,c8,c5,1
  294 00000178                 MOV_PC_LR
   25 00000178                 [                THUMBCODE
   28 00000178 E1A0F00E        mov              pc,lr
   29 0000017C                 ]
  295 0000017C         
  296 0000017C         ;void MMU_InvalidateDTLB(void)
  297 0000017C                 EXPORT           MMU_InvalidateDTLB
  298 0000017C         MMU_InvalidateDTLB
  299 0000017C EE080F16        mcr              p15,0,r0,c8,c6,0



ARM Macro Assembler    Page 8 


  300 00000180                 MOV_PC_LR
   25 00000180                 [                THUMBCODE
   28 00000180 E1A0F00E        mov              pc,lr
   29 00000184                 ]
  301 00000184         
  302 00000184         ;void MMU_InvalidateDTLBMVA(U32 mva)
  303 00000184                 EXPORT           MMU_InvalidateDTLBMVA
  304 00000184         MMU_InvalidateDTLBMVA
  305 00000184         ;r0=mva
  306 00000184 EE080F36        mcr              p15,0,r0,c8,c6,1
  307 00000188                 MOV_PC_LR
   25 00000188                 [                THUMBCODE
   28 00000188 E1A0F00E        mov              pc,lr
   29 0000018C                 ]
  308 0000018C         
  309 0000018C         ;=================
  310 0000018C         ; Cache lock down
  311 0000018C         ;=================
  312 0000018C         ;void MMU_SetDCacheLockdownBase(U32 base)
  313 0000018C                 EXPORT           MMU_SetDCacheLockdownBase
  314 0000018C         MMU_SetDCacheLockdownBase
  315 0000018C         ;r0= victim & lockdown base
  316 0000018C EE090F10        mcr              p15,0,r0,c9,c0,0
  317 00000190                 MOV_PC_LR
   25 00000190                 [                THUMBCODE
   28 00000190 E1A0F00E        mov              pc,lr
   29 00000194                 ]
  318 00000194         
  319 00000194         ;void MMU_SetICacheLockdownBase(U32 base)
  320 00000194                 EXPORT           MMU_SetICacheLockdownBase
  321 00000194         MMU_SetICacheLockdownBase
  322 00000194         ;r0= victim & lockdown base
  323 00000194 EE090F30        mcr              p15,0,r0,c9,c0,1
  324 00000198                 MOV_PC_LR
   25 00000198                 [                THUMBCODE
   28 00000198 E1A0F00E        mov              pc,lr
   29 0000019C                 ]
  325 0000019C         
  326 0000019C         ;=================
  327 0000019C         ; TLB lock down
  328 0000019C         ;=================
  329 0000019C         ;void MMU_SetDTLBLockdown(U32 baseVictim)
  330 0000019C                 EXPORT           MMU_SetDTLBLockdown
  331 0000019C         MMU_SetDTLBLockdown
  332 0000019C         ;r0= baseVictim
  333 0000019C EE0A0F10        mcr              p15,0,r0,c10,c0,0
  334 000001A0                 MOV_PC_LR
   25 000001A0                 [                THUMBCODE
   28 000001A0 E1A0F00E        mov              pc,lr
   29 000001A4                 ]
  335 000001A4         
  336 000001A4         ;void MMU_SetITLBLockdown(U32 baseVictim)
  337 000001A4                 EXPORT           MMU_SetITLBLockdown
  338 000001A4         MMU_SetITLBLockdown
  339 000001A4         ;r0= baseVictim
  340 000001A4 EE0A0F30        mcr              p15,0,r0,c10,c0,1
  341 000001A8                 MOV_PC_LR
   25 000001A8                 [                THUMBCODE
   28 000001A8 E1A0F00E        mov              pc,lr



ARM Macro Assembler    Page 9 


   29 000001AC                 ]
  342 000001AC         
  343 000001AC         ;============
  344 000001AC         ; Process ID
  345 000001AC         ;============
  346 000001AC         ;void MMU_SetProcessId(U32 pid)
  347 000001AC                 EXPORT           MMU_SetProcessId
  348 000001AC         MMU_SetProcessId
  349 000001AC         ;r0= pid
  350 000001AC EE0D0F10        mcr              p15,0,r0,c13,c0,0
  351 000001B0                 MOV_PC_LR
   25 000001B0                 [                THUMBCODE
   28 000001B0 E1A0F00E        mov              pc,lr
   29 000001B4                 ]
  352 000001B4         
  353 000001B4                 END
Command Line: --debug --xref --cpu=ARM920T --apcs=interwork --depend=.\Obj\2440
slib.d -o.\Obj\2440slib.o -Id:\Keil\ARM\RV31\INC -Id:\Keil\ARM\CMSIS\Include -I
d:\Keil\ARM\Inc\Samsung --list=.\2440slib.lst Source\Mini2440\MMU\2440slib.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

C$$code 00000000

Symbol: C$$code
   Definitions
      At line 32 in file Source\Mini2440\MMU\2440slib.s
   Uses
      None
Comment: C$$code unused
CLR_IF 0000003C

Symbol: CLR_IF
   Definitions
      At line 70 in file Source\Mini2440\MMU\2440slib.s
   Uses
      At line 69 in file Source\Mini2440\MMU\2440slib.s
Comment: CLR_IF used once
EnterCritical 00000000

Symbol: EnterCritical
   Definitions
      At line 34 in file Source\Mini2440\MMU\2440slib.s
   Uses
      At line 33 in file Source\Mini2440\MMU\2440slib.s
Comment: EnterCritical used once
ExitCritical 00000014

Symbol: ExitCritical
   Definitions
      At line 42 in file Source\Mini2440\MMU\2440slib.s
   Uses
      At line 41 in file Source\Mini2440\MMU\2440slib.s
Comment: ExitCritical used once
MMU_CleanDCacheIndex 0000014C

Symbol: MMU_CleanDCacheIndex
   Definitions
      At line 256 in file Source\Mini2440\MMU\2440slib.s
   Uses
      At line 255 in file Source\Mini2440\MMU\2440slib.s
Comment: MMU_CleanDCacheIndex used once
MMU_CleanDCacheMVA 0000013C

Symbol: MMU_CleanDCacheMVA
   Definitions
      At line 242 in file Source\Mini2440\MMU\2440slib.s
   Uses
      At line 241 in file Source\Mini2440\MMU\2440slib.s
Comment: MMU_CleanDCacheMVA used once
MMU_CleanInvalidateDCacheIndex 00000154

Symbol: MMU_CleanInvalidateDCacheIndex
   Definitions
      At line 263 in file Source\Mini2440\MMU\2440slib.s
   Uses
      At line 262 in file Source\Mini2440\MMU\2440slib.s
Comment: MMU_CleanInvalidateDCacheIndex used once
MMU_CleanInvalidateDCacheMVA 00000144

Symbol: MMU_CleanInvalidateDCacheMVA



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 249 in file Source\Mini2440\MMU\2440slib.s
   Uses
      At line 248 in file Source\Mini2440\MMU\2440slib.s
Comment: MMU_CleanInvalidateDCacheMVA used once
MMU_DisableAlignFault 000000AC

Symbol: MMU_DisableAlignFault
   Definitions
      At line 138 in file Source\Mini2440\MMU\2440slib.s
   Uses
      At line 137 in file Source\Mini2440\MMU\2440slib.s
Comment: MMU_DisableAlignFault used once
MMU_DisableDCache 0000008C

Symbol: MMU_DisableDCache
   Definitions
      At line 122 in file Source\Mini2440\MMU\2440slib.s
   Uses
      At line 121 in file Source\Mini2440\MMU\2440slib.s
Comment: MMU_DisableDCache used once
MMU_DisableICache 0000006C

Symbol: MMU_DisableICache
   Definitions
      At line 106 in file Source\Mini2440\MMU\2440slib.s
   Uses
      At line 105 in file Source\Mini2440\MMU\2440slib.s
Comment: MMU_DisableICache used once
MMU_DisableMMU 000000CC

Symbol: MMU_DisableMMU
   Definitions
      At line 154 in file Source\Mini2440\MMU\2440slib.s
   Uses
      At line 153 in file Source\Mini2440\MMU\2440slib.s
Comment: MMU_DisableMMU used once
MMU_EnableAlignFault 0000009C

Symbol: MMU_EnableAlignFault
   Definitions
      At line 130 in file Source\Mini2440\MMU\2440slib.s
   Uses
      At line 129 in file Source\Mini2440\MMU\2440slib.s
Comment: MMU_EnableAlignFault used once
MMU_EnableDCache 0000007C

Symbol: MMU_EnableDCache
   Definitions
      At line 114 in file Source\Mini2440\MMU\2440slib.s
   Uses
      At line 113 in file Source\Mini2440\MMU\2440slib.s
Comment: MMU_EnableDCache used once
MMU_EnableICache 0000005C

Symbol: MMU_EnableICache
   Definitions
      At line 98 in file Source\Mini2440\MMU\2440slib.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 97 in file Source\Mini2440\MMU\2440slib.s
Comment: MMU_EnableICache used once
MMU_EnableMMU 000000BC

Symbol: MMU_EnableMMU
   Definitions
      At line 146 in file Source\Mini2440\MMU\2440slib.s
   Uses
      At line 145 in file Source\Mini2440\MMU\2440slib.s
Comment: MMU_EnableMMU used once
MMU_InvalidateDCache 0000012C

Symbol: MMU_InvalidateDCache
   Definitions
      At line 229 in file Source\Mini2440\MMU\2440slib.s
   Uses
      At line 228 in file Source\Mini2440\MMU\2440slib.s
Comment: MMU_InvalidateDCache used once
MMU_InvalidateDCacheMVA 00000134

Symbol: MMU_InvalidateDCacheMVA
   Definitions
      At line 235 in file Source\Mini2440\MMU\2440slib.s
   Uses
      At line 234 in file Source\Mini2440\MMU\2440slib.s
Comment: MMU_InvalidateDCacheMVA used once
MMU_InvalidateDTLB 0000017C

Symbol: MMU_InvalidateDTLB
   Definitions
      At line 298 in file Source\Mini2440\MMU\2440slib.s
   Uses
      At line 297 in file Source\Mini2440\MMU\2440slib.s
Comment: MMU_InvalidateDTLB used once
MMU_InvalidateDTLBMVA 00000184

Symbol: MMU_InvalidateDTLBMVA
   Definitions
      At line 304 in file Source\Mini2440\MMU\2440slib.s
   Uses
      At line 303 in file Source\Mini2440\MMU\2440slib.s
Comment: MMU_InvalidateDTLBMVA used once
MMU_InvalidateICache 00000114

Symbol: MMU_InvalidateICache
   Definitions
      At line 209 in file Source\Mini2440\MMU\2440slib.s
   Uses
      At line 208 in file Source\Mini2440\MMU\2440slib.s
Comment: MMU_InvalidateICache used once
MMU_InvalidateICacheMVA 0000011C

Symbol: MMU_InvalidateICacheMVA
   Definitions
      At line 215 in file Source\Mini2440\MMU\2440slib.s
   Uses
      At line 214 in file Source\Mini2440\MMU\2440slib.s
Comment: MMU_InvalidateICacheMVA used once
MMU_InvalidateIDCache 0000010C



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols


Symbol: MMU_InvalidateIDCache
   Definitions
      At line 203 in file Source\Mini2440\MMU\2440slib.s
   Uses
      At line 202 in file Source\Mini2440\MMU\2440slib.s
Comment: MMU_InvalidateIDCache used once
MMU_InvalidateITLB 0000016C

Symbol: MMU_InvalidateITLB
   Definitions
      At line 285 in file Source\Mini2440\MMU\2440slib.s
   Uses
      At line 284 in file Source\Mini2440\MMU\2440slib.s
Comment: MMU_InvalidateITLB used once
MMU_InvalidateITLBMVA 00000174

Symbol: MMU_InvalidateITLBMVA
   Definitions
      At line 291 in file Source\Mini2440\MMU\2440slib.s
   Uses
      At line 290 in file Source\Mini2440\MMU\2440slib.s
Comment: MMU_InvalidateITLBMVA used once
MMU_InvalidateTLB 00000164

Symbol: MMU_InvalidateTLB
   Definitions
      At line 279 in file Source\Mini2440\MMU\2440slib.s
   Uses
      At line 278 in file Source\Mini2440\MMU\2440slib.s
Comment: MMU_InvalidateTLB used once
MMU_PrefetchICacheMVA 00000124

Symbol: MMU_PrefetchICacheMVA
   Definitions
      At line 222 in file Source\Mini2440\MMU\2440slib.s
   Uses
      At line 221 in file Source\Mini2440\MMU\2440slib.s
Comment: MMU_PrefetchICacheMVA used once
MMU_SetAsyncBusMode 000000EC

Symbol: MMU_SetAsyncBusMode
   Definitions
      At line 172 in file Source\Mini2440\MMU\2440slib.s
   Uses
      At line 171 in file Source\Mini2440\MMU\2440slib.s
Comment: MMU_SetAsyncBusMode used once
MMU_SetDCacheLockdownBase 0000018C

Symbol: MMU_SetDCacheLockdownBase
   Definitions
      At line 314 in file Source\Mini2440\MMU\2440slib.s
   Uses
      At line 313 in file Source\Mini2440\MMU\2440slib.s
Comment: MMU_SetDCacheLockdownBase used once
MMU_SetDTLBLockdown 0000019C

Symbol: MMU_SetDTLBLockdown
   Definitions



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Relocatable symbols

      At line 331 in file Source\Mini2440\MMU\2440slib.s
   Uses
      At line 330 in file Source\Mini2440\MMU\2440slib.s
Comment: MMU_SetDTLBLockdown used once
MMU_SetDomain 00000104

Symbol: MMU_SetDomain
   Definitions
      At line 193 in file Source\Mini2440\MMU\2440slib.s
   Uses
      At line 192 in file Source\Mini2440\MMU\2440slib.s
Comment: MMU_SetDomain used once
MMU_SetFastBusMode 000000DC

Symbol: MMU_SetFastBusMode
   Definitions
      At line 163 in file Source\Mini2440\MMU\2440slib.s
   Uses
      At line 162 in file Source\Mini2440\MMU\2440slib.s
Comment: MMU_SetFastBusMode used once
MMU_SetICacheLockdownBase 00000194

Symbol: MMU_SetICacheLockdownBase
   Definitions
      At line 321 in file Source\Mini2440\MMU\2440slib.s
   Uses
      At line 320 in file Source\Mini2440\MMU\2440slib.s
Comment: MMU_SetICacheLockdownBase used once
MMU_SetITLBLockdown 000001A4

Symbol: MMU_SetITLBLockdown
   Definitions
      At line 338 in file Source\Mini2440\MMU\2440slib.s
   Uses
      At line 337 in file Source\Mini2440\MMU\2440slib.s
Comment: MMU_SetITLBLockdown used once
MMU_SetProcessId 000001AC

Symbol: MMU_SetProcessId
   Definitions
      At line 348 in file Source\Mini2440\MMU\2440slib.s
   Uses
      At line 347 in file Source\Mini2440\MMU\2440slib.s
Comment: MMU_SetProcessId used once
MMU_SetTTBase 000000FC

Symbol: MMU_SetTTBase
   Definitions
      At line 183 in file Source\Mini2440\MMU\2440slib.s
   Uses
      At line 182 in file Source\Mini2440\MMU\2440slib.s
Comment: MMU_SetTTBase used once
MMU_WaitForInterrupt 0000015C

Symbol: MMU_WaitForInterrupt
   Definitions
      At line 270 in file Source\Mini2440\MMU\2440slib.s
   Uses
      At line 269 in file Source\Mini2440\MMU\2440slib.s



ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Relocatable symbols

Comment: MMU_WaitForInterrupt used once
SET_IF 00000020

Symbol: SET_IF
   Definitions
      At line 52 in file Source\Mini2440\MMU\2440slib.s
   Uses
      At line 51 in file Source\Mini2440\MMU\2440slib.s
Comment: SET_IF used once
WR_IF 00000034

Symbol: WR_IF
   Definitions
      At line 62 in file Source\Mini2440\MMU\2440slib.s
   Uses
      At line 61 in file Source\Mini2440\MMU\2440slib.s
Comment: WR_IF used once
inportw 00000054

Symbol: inportw
   Definitions
      At line 82 in file Source\Mini2440\MMU\2440slib.s
   Uses
      At line 81 in file Source\Mini2440\MMU\2440slib.s
Comment: inportw used once
outportw 0000004C

Symbol: outportw
   Definitions
      At line 78 in file Source\Mini2440\MMU\2440slib.s
   Uses
      At line 77 in file Source\Mini2440\MMU\2440slib.s
Comment: outportw used once
41 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

NOINT 000000C0

Symbol: NOINT
   Definitions
      At line 12 in file Source\Mini2440\MMU\2440slib.s
   Uses
      At line 37 in file Source\Mini2440\MMU\2440slib.s
      At line 56 in file Source\Mini2440\MMU\2440slib.s
      At line 73 in file Source\Mini2440\MMU\2440slib.s

R1_A 00000002

Symbol: R1_A
   Definitions
      At line 91 in file Source\Mini2440\MMU\2440slib.s
   Uses
      At line 132 in file Source\Mini2440\MMU\2440slib.s
      At line 140 in file Source\Mini2440\MMU\2440slib.s

R1_C 00000004

Symbol: R1_C
   Definitions
      At line 90 in file Source\Mini2440\MMU\2440slib.s
   Uses
      At line 116 in file Source\Mini2440\MMU\2440slib.s
      At line 124 in file Source\Mini2440\MMU\2440slib.s

R1_I 00001000

Symbol: R1_I
   Definitions
      At line 89 in file Source\Mini2440\MMU\2440slib.s
   Uses
      At line 100 in file Source\Mini2440\MMU\2440slib.s
      At line 108 in file Source\Mini2440\MMU\2440slib.s

R1_M 00000001

Symbol: R1_M
   Definitions
      At line 92 in file Source\Mini2440\MMU\2440slib.s
   Uses
      At line 148 in file Source\Mini2440\MMU\2440slib.s
      At line 156 in file Source\Mini2440\MMU\2440slib.s

R1_iA 80000000

Symbol: R1_iA
   Definitions
      At line 93 in file Source\Mini2440\MMU\2440slib.s
   Uses
      At line 165 in file Source\Mini2440\MMU\2440slib.s
      At line 174 in file Source\Mini2440\MMU\2440slib.s

R1_nF 40000000

Symbol: R1_nF
   Definitions



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

      At line 94 in file Source\Mini2440\MMU\2440slib.s
   Uses
      At line 165 in file Source\Mini2440\MMU\2440slib.s
      At line 174 in file Source\Mini2440\MMU\2440slib.s

7 symbols
379 symbols in table
